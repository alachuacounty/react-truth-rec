{"ast":null,"code":"var _jsxFileName = \"/Users/apatel/Documents/GitHub/react-truth-rec/src/pages/contact.jsx\";\nimport React from \"react\";\nimport '../css/TruthRec.css';\nimport \"../css/contact.css\";\nvar hiddenStyle = {\n  display: 'none'\n};\n\nfunction validate() {\n  alert(\"not overwriiten\");\n}\n\n;\n\nclass ContactPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.isValid_firstName = value => {\n      let valid = value !== \"\";\n      let formValid = valid && this.state.lnameValid && this.state.emailValid && this.state.msgValid;\n      this.setState({\n        [this.state.fnameValid]: valid,\n        [this.state.formValid]: formValid\n      }, () => {\n        this.updateErrorMsg(0, valid);\n      });\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      inputEmail: '',\n      inputMessage: '',\n      userComment: '',\n      fnameValid: false,\n      lnameValid: false,\n      emailValid: false,\n      msgValid: false,\n      formValid: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateForm(event) {\n    event.preventDefault();\n    /*let formValid = this.state.lnameValid && this.state.fnameValid && this.state.emailValid && this.state.msgValid;\n     this.setState({[this.state.formValid]: formValid},\n      ()=>{ alert(\"form valid = \"+ this.state.formValid)});\n       console.log('fname : ' + this.state.fnameValid);\n      console.log('lname : ' + this.state.lnameValid);\n      console.log('email : ' + this.state.emailValid);\n      console.log('msg : ' + this.state.msgValid);*/\n    //check state formvalid\n    // post if valid - >return state formvalid\n\n    let msg = 'fname : ' + this.state.fnameValid + \"\\n\" + 'lname : ' + this.state.lnameValid + \"\\n\" + 'email : ' + this.state.emailValid + \"\\n\" + 'msg : ' + this.state.msgValid + \"\\n\" + 'form' + this.state.formValid;\n    alert(msg);\n    return false;\n  }\n\n  validateField(fieldname, value) {\n    // determine which field and call appropriate validate function \n    switch (fieldname) {\n      case 'firstName':\n        this.isValid_firstName(value);\n        break;\n\n      case 'lastName':\n        this.isValid_lastName(value);\n        break;\n\n      case 'inputEmail':\n        this.isValid_Email(value);\n        break;\n\n      case 'inputMessage':\n        this.isValid_Message(value);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  isValid_lastName(value) {\n    let valid = value !== \"\";\n    let formValid = valid && this.state.fnameValid && this.state.emailValid && this.state.msgValid;\n    this.setState({\n      [this.state.lnameValid]: valid,\n      [this.state.formValid]: formValid\n    }, () => {\n      this.updateErrorMsg(1, valid);\n    });\n  }\n\n  isValid_Email(value) {\n    //TODO set state valid for email\n    //regex match stuff here\n    const expression = /(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([ \\t]*\\r\\n)?[ \\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([ \\t]*\\r\\n)?[ \\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i;\n    let valid = value === \"\" || !expression.test(value.toLowerCase()) ? false : true;\n    let formValid = valid && this.state.fnameValid && this.state.lnameValid && this.state.msgValid;\n    this.setState({\n      [this.state.emailValid]: valid,\n      [this.state.formValid]: formValid\n    }, () => {\n      this.updateErrorMsg(2, valid);\n    });\n  }\n\n  isValid_Message(value) {\n    let valid = value !== \"\";\n    let formValid = valid && this.state.fnameValid && this.state.lnameValid && this.state.emailValid;\n    this.setState({\n      [this.state.msgValid]: valid,\n      [this.state.formValid]: formValid\n    }, () => {\n      this.updateErrorMsg(3, valid);\n    });\n  }\n\n  updateErrorMsg(index, validity) {\n    const validationMessages = document.getElementsByClassName(\"form-validation\");\n\n    if (!validity) {\n      validationMessages[index].style[\"display\"] = \"inline-block\";\n    } else {\n      validationMessages[index].style[\"display\"] = \"none\";\n    }\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      id: \"contact-main\",\n      class: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"main-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Contact Us\"), React.createElement(\"div\", {\n      class: \"contact-story\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Send Us Your Story\"))), React.createElement(\"div\", {\n      class: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      /*method=\"post\"*/\n      action: this.handleSubmit,\n      id: \"contactform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"UpdatePanel1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      class: \"form-style-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Full Name \", React.createElement(\"span\", {\n      class: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      name: \"firstName\",\n      maxLength: \"125\",\n      id: \"firstName\",\n      type: \"text\",\n      class: \"field-divided\",\n      placeholder: \"First\"\n      /*required=\"required\"*/\n      ,\n      onChange: this.handleUserInput,\n      value: this.state.firstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"firstNameMsg\",\n      class: \"form-validation\",\n      \"aria-live\": \"polite\",\n      \"aria-label\": \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \" * Required \"), React.createElement(\"input\", {\n      name: \"lastName\",\n      maxLength: \"125\",\n      id: \"lastName\",\n      type: \"text\",\n      class: \"field-divided\",\n      placeholder: \"Last\"\n      /*required=\"required\"*/\n      ,\n      onChange: this.handleUserInput,\n      value: this.state.lastName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"lastNameMsg\",\n      class: \"form-validation\",\n      \"aria-live\": \"polite\",\n      \"aria-label\": \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \" * Required  \")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"inputEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Email \", React.createElement(\"span\", {\n      class: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"input\", {\n      name: \"inputEmail\",\n      maxLength: \"256\",\n      id: \"inputEmail\",\n      type: \"email\",\n      class: \"field-long\",\n      placeholder: \"Email\"\n      /*required=\"required\"*/\n      ,\n      onChange: this.handleUserInput,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"EmailMsg\",\n      class: \"form-validation\",\n      \"aria-live\": \"polite\",\n      \"aria-label\": \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \" Please specify a valid email address.  \")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"inputMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Your Message \", React.createElement(\"span\", {\n      class: \"required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"textarea\", {\n      name: \"inputMessage\",\n      rows: \"3\",\n      cols: \"20\",\n      id: \"inputMessage\",\n      class: \"field-long field-textarea\",\n      placeholder: \"\",\n      onChange: this.handleUserInput,\n      value: this.state.inputMessage\n      /*required=\"required\"*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"MessageMsg\",\n      class: \"form-validation\",\n      \"aria-live\": \"polite\",\n      \"aria-label\": \"Message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \" * Required \")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"contact_submit\",\n      value: \"Send Message\",\n      id: \"contact_submit\",\n      class: \"btn learn-button text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      style: hiddenStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"userComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Comment \"), React.createElement(\"input\", {\n      name: \"userComment\",\n      autoComplete: \"off\",\n      id: \"userComment\",\n      type: \"text\",\n      class: \"form-control\",\n      placeholder: \"Your Comment\",\n      \"aria-label\": \"Please leave this field empty\",\n      onChange: this.handleUserInput,\n      value: this.state.userComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default ContactPage;","map":{"version":3,"sources":["/Users/apatel/Documents/GitHub/react-truth-rec/src/pages/contact.jsx"],"names":["React","hiddenStyle","display","validate","alert","ContactPage","Component","constructor","props","handleUserInput","e","name","target","value","setState","validateField","isValid_firstName","valid","formValid","state","lnameValid","emailValid","msgValid","fnameValid","updateErrorMsg","firstName","lastName","inputEmail","inputMessage","userComment","handleSubmit","bind","validateForm","event","preventDefault","msg","fieldname","isValid_lastName","isValid_Email","isValid_Message","expression","test","toLowerCase","index","validity","validationMessages","document","getElementsByClassName","style","render","email"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport '../css/TruthRec.css';\nimport \"../css/contact.css\";\n\nvar hiddenStyle = { display: 'none'};\n\nfunction validate() { \n    alert(\"not overwriiten\");\n};\n\n\n\nclass ContactPage extends React.Component {\n\n\n    constructor (props) {\n        super(props);\n        this.state = {\n          firstName: '',\n          lastName:'',  \n          inputEmail: '',\n          inputMessage: '',\n          userComment:'',\n          fnameValid: false,\n          lnameValid:false,\n          emailValid:false,\n          msgValid:false,\n          formValid:false\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n\n      }\n    \n      handleUserInput = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value},\n            () => { this.validateField(name, value) } );\n      }\n\n      validateForm(event){\n\n        event.preventDefault();\n\n        /*let formValid = this.state.lnameValid && this.state.fnameValid && this.state.emailValid && this.state.msgValid;\n\n        this.setState({[this.state.formValid]: formValid},\n          ()=>{ alert(\"form valid = \"+ this.state.formValid)});\n\n          console.log('fname : ' + this.state.fnameValid);\n          console.log('lname : ' + this.state.lnameValid);\n          console.log('email : ' + this.state.emailValid);\n          console.log('msg : ' + this.state.msgValid);*/\n\n          //check state formvalid\n         // post if valid - >return state formvalid\n\n         let msg = 'fname : ' + this.state.fnameValid + \"\\n\" +\n         'lname : ' + this.state.lnameValid + \"\\n\" +\n         'email : ' + this.state.emailValid + \"\\n\" +\n         'msg : ' + this.state.msgValid + \"\\n\" +\n         'form'+ this.state.formValid;\n\n         alert(msg);\n\n\n         return false;\n\n      }\n\n      validateField(fieldname, value){\n          // determine which field and call appropriate validate function \n\n          switch(fieldname){\n              case 'firstName': this.isValid_firstName(value);\n                                break;\n              case 'lastName': this.isValid_lastName(value);\n                                break;\n              case 'inputEmail': this.isValid_Email(value);\n                                break;\n              case 'inputMessage': this.isValid_Message(value);\n                                break;\n              default:\n                  break;\n          }     \n\n      }\n\n\n    isValid_firstName = (value) => {\n\n        let valid = value !== \"\";\n        let formValid = valid && this.state.lnameValid  && this.state.emailValid && this.state.msgValid;\n\n        this.setState({[this.state.fnameValid]: valid, [this.state.formValid]: formValid},\n        ()=> { this.updateErrorMsg(0,valid) });\n     \n    }\n  \n    isValid_lastName(value) {\n\n\n        let valid = value !== \"\";\n        let formValid = valid && this.state.fnameValid  && this.state.emailValid && this.state.msgValid;\n\n        this.setState({[this.state.lnameValid]: valid, [this.state.formValid]: formValid},\n        ()=> { this.updateErrorMsg(1,valid) });\n\n    }\n\n    isValid_Email(value){\n        \n        //TODO set state valid for email\n        //regex match stuff here\n        const expression = /(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([ \\t]*\\r\\n)?[ \\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([ \\t]*\\r\\n)?[ \\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i;\n        \n        let valid = (value === \"\" || !expression.test(value.toLowerCase()) ) ? false:true;\n        let formValid = valid && this.state.fnameValid  && this.state.lnameValid && this.state.msgValid;\n\n        this.setState({[this.state.emailValid]: valid, [this.state.formValid]: formValid},\n            ()=> { this.updateErrorMsg(2,valid) });\n    \n    }\n\n\n    isValid_Message(value) {\n\n        \n        let valid = value !== \"\";\n        let formValid = valid && this.state.fnameValid  && this.state.lnameValid && this.state.emailValid;\n\n        this.setState({[this.state.msgValid]: valid, [this.state.formValid]: formValid},\n        ()=> { this.updateErrorMsg(3,valid) });\n\n    }\n\n    updateErrorMsg(index, validity) {\n\n        const validationMessages = document.getElementsByClassName(\"form-validation\");\n\n        if (!validity) {\n            validationMessages[index].style[\"display\"] = \"inline-block\";\n        }\n        else {\n            validationMessages[index].style[\"display\"] = \"none\";\n        }\n\n    }\n\n  \n  \n    render(){\n        return (\n            <section id=\"contact-main\" class=\"main\">\n                <div id=\"main-content\">\n                    <h1 class=\"title\">Contact Us</h1>\n                    <div class=\"contact-story\">\n                        <h3><strong>Send Us Your Story</strong></h3>\n                    </div>                   \n                    <div class=\"form\">\n                        <form /*method=\"post\"*/ action={this.handleSubmit} id=\"contactform\">\n                              <div id=\"UpdatePanel1\">\n\t\n                                        <ul class=\"form-style-1\">\n                                            <li>\n                                                <label>Full Name <span class=\"required\">*</span></label>\n                                                <input name=\"firstName\" maxLength=\"125\" id=\"firstName\" type=\"text\" class=\"field-divided\" placeholder=\"First\" /*required=\"required\"*/ onChange={this.handleUserInput} value={this.state.firstName} />\n                                                <span id=\"firstNameMsg\" class=\"form-validation\" aria-live=\"polite\" aria-label=\"First Name\"> * Required </span>\n                                                <input name=\"lastName\" maxLength=\"125\" id=\"lastName\" type=\"text\" class=\"field-divided\" placeholder=\"Last\"  /*required=\"required\"*/  onChange={this.handleUserInput} value={this.state.lastName}/>\n                                                <span id=\"lastNameMsg\" class=\"form-validation\" aria-live=\"polite\" aria-label=\"Last Name\"> * Required  </span>\n\n                                            </li>\n                                            <li>\n                                                <label htmlFor=\"inputEmail\">Email <span class=\"required\">*</span></label>\n                                                <input name=\"inputEmail\" maxLength=\"256\" id=\"inputEmail\" type=\"email\" class=\"field-long\" placeholder=\"Email\"  /*required=\"required\"*/ onChange={this.handleUserInput} value={this.state.email}/>\n                                                <span id=\"EmailMsg\" class=\"form-validation\" aria-live=\"polite\" aria-label=\"Email\"> Please specify a valid email address.  </span>\n                                            </li>\n                                            <li>\n                                                <label htmlFor=\"inputMessage\">Your Message <span class=\"required\">*</span></label>\n                                                <textarea name=\"inputMessage\" rows=\"3\" cols=\"20\" id=\"inputMessage\" class=\"field-long field-textarea\" placeholder=\"\" onChange={this.handleUserInput} value={this.state.inputMessage} /*required=\"required\"*/></textarea>\n                                                <span id=\"MessageMsg\" class=\"form-validation\" aria-live=\"polite\" aria-label=\"Message\"> * Required </span>\n                                            </li>\n                                            <li>\n                                                <input type=\"submit\" name=\"contact_submit\" value=\"Send Message\" id=\"contact_submit\" class=\"btn learn-button text-white\"/>\n                                            </li>\n                                            <li style={hiddenStyle}>\n                                                <label htmlFor=\"userComment\">Comment </label>\n                                                <input name=\"userComment\" autoComplete=\"off\" id=\"userComment\" type=\"text\" class=\"form-control\" placeholder=\"Your Comment\" aria-label=\"Please leave this field empty\" onChange={this.handleUserInput} value={this.state.userComment}/>\n                                            </li>\n                                        </ul>                                 \n                                </div>\n                       </form>\n                    </div>\n             </div>  \n            </section>\n        );\n    }\n\n}\n\n\nexport default ContactPage;"]},"metadata":{},"sourceType":"module"}